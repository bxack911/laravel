version: "3"

services:
    apache:
        build: ./docker/apache
        ports:
            - "8081:80"
        environment:
            DOCKER_HOST: "unix:///var/run/docker.sock"
        volumes:
            - ./html:/var/www/html/:z
            - ./docker/apache/php.ini:/usr/local/etc/php/php.ini:z
        networks:
            - backend

    db:
        image: "mysql:8"
        volumes:
            - ./docker/db:/var/lib/mysql
        environment:
               MYSQL_ROOT_PASSWORD: pass
               MYSQL_DATABASE: sprava_lara
               MYSQL_USER: sprava_lara
               MYSQL_PASSWORD: pass
        networks:
            - backend

    phpmyadmin:
        image: phpmyadmin/phpmyadmin:latest
        environment:
            - PMA_HOST=db
            - PMA_USER=sprava_lara
            - PMA_PASSWORD=pass
        volumes:
            - ./docker/apache/upload.ini:/usr/local/etc/php/php.ini:z
            - /sessions
        ports:
            - "8082:80"
        networks:
            - backend

    rabbitmq:
        image: rabbitmq:3-management
        hostname: my-rabbit
        volumes:
            #- ./rabbitmq/definitions.json:/etc/rabbitmq/definitions.json
            #- ./rabbitmq/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf
            - ./docker/rabbitmq/data:/var/lib/rabbitmq/mnesia/rabbit@my-rabbit
            - ./docker/rabbitmq/logs:/var/log/rabbitmq/log
        ports:
            - 5672:5672
            - 15672:15672

    redis:
        image: redis:3.0
        ports:
            - "6379:6379"
        networks:
            - backend

    elasticsearch:
        image: docker.elastic.co/elasticsearch/elasticsearch:7.7.0
        environment:
            - node.name=elastic
            - cluster.name=es-docker-cluster
            - discovery.seed_hosts=es02,es03
            - cluster.initial_master_nodes=elastic
            - bootstrap.memory_lock=true
        ulimits:
            memlock:
                soft: -1
                hard: -1
        volumes:
            - ./docker/elastic:/usr/share/elasticsearch/data
        ports:
            - 9200:9200
        networks:
            - backend

    kibana:
        image: kibana:7.7.0
        ports:
            - "5601:5601"
        networks:
            - backend

    rocketchat:
        image: rocket.chat:latest
        restart: unless-stopped
        volumes:
            - ./uploads:/app/uploads
        environment:
            - PORT=3000
            - ROOT_URL=http://chat.inumio.com
            - MONGO_URL=mongodb://mongo:27017/rocketchat
            - MONGO_OPLOG_URL=mongodb://mongo:27017/local
            - Accounts_UseDNSDomainCheck=True
        depends_on:
            - mongo
        ports:
            - 8818:3000

    mongo:
        image: mongo
        restart: unless-stopped
        volumes:
            - $PWD/data:/data/db
            - $PWD/dump:/dump
        command: mongod --smallfiles --oplogSize 128 --replSet rs0 --storageEngine=mmapv1

    mongo-init-replica:
        image: mongo
        command: 'bash -c "for i in `seq 1 30`; do mongo mongo/rocketchat --eval \"rs.initiate({ _id: ''rs0'', members: [ { _id: 0, host: ''localhost:27017'' } ]})\" && s=$$? && break || s=$$?; echo \"Tried $$i times. Waiting 5 secs...\"; sleep 5; done; (exit $$s)"'
        depends_on:
            - mongo